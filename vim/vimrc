set nocompatible
filetype off
set rtp+=~/.vim/bundle/Vundle.vim
set relativenumber
set number
set autoread

" Why on earth would I want modelines to work?
set modelines=0

" Vundle
call vundle#begin()

Plugin 'VundleVim/Vundle.vim'

" Plugins here
Plugin 'scrooloose/nerdtree'
Plugin 'kien/ctrlp.vim'
Plugin 'tpope/vim-fugitive'
Plugin 'tpope/vim-surround'
Plugin 'prettier/vim-prettier'

Plugin 'pangloss/vim-javascript'    " JavaScript support
Plugin 'leafgarland/typescript-vim' " TypeScript syntax
Plugin 'maxmellon/vim-jsx-pretty'     " JS and JSX syntax
Plugin 'neoclide/coc.nvim' , { 'branch' : 'release' }

call vundle#end()

" Install coc-tsserver
let g:coc_global_extensions = [ 'coc-tsserver' ]

" Use ripgrep if present
if executable("rg")
  set grepprg=rg\ --vimgrep\ --no-heading\ -M\ 500
  set grepformat=%f:%l:%c:%m,%f:%l:%m
endif

filetype plugin indent on
filetype plugin on
syntax enable
set term=xterm-256color
set omnifunc=syntaxcomplete#Complete

" Leader key
let mapleader=","

" Make jj switch to normal mode
inoremap jj <Esc>

" Make ,w save and write in insert mode
inoremap <leader>w <Esc>:wa<CR>

" Changes to navigating vim splits
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>
tnoremap <C-J> <C-W><C-J>
tnoremap <C-K> <C-W><C-K>
tnoremap <C-L> <C-W><C-L>
tnoremap <C-H> <C-W><C-H>
set splitbelow
set splitright

noremap gh /'\<Bar>"\<Bar>(\<Bar>)\<Bar>\[\<Bar>\]\<Bar>{\<Bar>}\<Bar>\.\<Bar>,<CR>

nnoremap <C-tab> :bnext

" NERDTree toggle
nnoremap <C-e> :NERDTree<CR>
nnoremap <leader>f :NERDTreeFocus<CR>

" Shortcuts for splits
noremap <leader>v :vsplit<CR>
noremap <leader>h :split<CR>

" Shortcut for write/quit
noremap <leader>q :q<CR>
noremap <leader>w :wa<CR>

" Fugitive shortcuts
noremap <leader>gs :Gstatus<CR>
noremap <leader>gi :Gdiff<CR>
noremap <leader>gc :Gcommit -m "

" Make CtrlP work with ctrl-p
nnoremap <C-p> :CtrlP<CR>
" Make CtrlP use .gitignore file
let g:ctrlp_user_command = ['.git/', 'git --git-dir=%s/.git ls-files -oc --exclude-standard']
" let g:ctrlp_user_command = ['git --git-dir=%s/.git ls-files -oc --exclude-standard']
" Make CtrlP always use vim working directory
let g:ctrlp_working_path_mode = 0

" Remove trailing whitespace
autocmd BufWritePre * if &buftype != 'terminal' | :%s/\s\+$//e | endif

" Built-in file explorer settings
let g:netrw_winsize = 25
let g:netrw_banner = 0
let g:netrw_liststyle = 3

" Prettier plugin settings
let g:prettier#quickfix_enabled = 0
let g:prettier#autoformat = 0
let g:prettier#config#trailing_comma = 'none'
autocmd BufWritePre *.ts PrettierAsync
autocmd BufWritePre *.js PrettierAsync
autocmd BufWritePre *.tsx PrettierAsync
autocmd BufWritePre *.html PrettierAsync
autocmd BufWritePre *.css PrettierAsync
autocmd BufWritePre *.scss PrettierAsync
autocmd BufWritePre *.json PrettierAsync
autocmd BufWritePre *.md PrettierAsync

" TypeScript (tsuquyomi) settings
" set <F12>=<C-v><F12>
autocmd FileType typescript,typescript.tsx noremap <F12> :TsuquyomiDefinition<CR>
autocmd FileType javascript noremap <F12> :TernDef<CR>
autocmd FileType typescript,typescript.tsx noremap <F2> :TsuRenameSymbol<CR>
autocmd FileType javascript noremap <F2> :TernRename<CR>
inoremap <leader>, <C-x><C-o>
autocmd FileType typescript,typescript.tsx nmap <buffer> <leader>t :echo tsuquyomi#hint()<CR>
autocmd FileType javascript nmap <buffer> <leader>t :TernType<CR>

" Tab settings
set expandtab
set shiftwidth=2
set softtabstop=2
set autoindent
set smartindent

" Fix OSX backspace issues
set backspace=indent,eol,start
set noshowmode

" Disable line numbers in terminal mode
autocmd BufWinEnter * if &buftype == 'terminal' | setlocal norelativenumber | setlocal nonumber | endif
" Shortcut for running tests in current terminal window
nnoremap <leader>yt :term ++curwin yarn test<CR>
" Quickly open window suitable for terminal
nnoremap <leader>ot :botright :new<CR>:setlocal winfixheight<CR>

" Quickly jump to previous buffer
noremap <leader>p :b#<CR>

" Navigate lgrep search results
nnoremap <leader>n :lnext<CR>
nnoremap <leader>N :lprevious<CR>

" Macros for inserting node modules
nnoremap <leader>a iimport {} from '';<Esc>hi
inoremap <leader>a import {} from '';<Esc>hi

nnoremap <leader>s ?}<CR>i<C-x><C-o>
inoremap <leader>s <Esc>?}<CR>i<C-x><C-o>

" Restart TS Server
nnoremap <leader>tsu :TsuStopServer<CR>:TsuStartServer<CR>:TsuReloadProject<CR>

" colorscheme codedark
